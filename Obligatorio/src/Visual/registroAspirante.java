/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visual;

import DataTypes.DataArea;
import DataTypes.DataAspirante;
import Logica.logicaArea;
import Logica.logicaAspirante;
import java.io.BufferedInputStream;
import java.io.DataInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.DefaultListSelectionModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;

/**
 *
 * @author ale
 */
public class registroAspirante extends javax.swing.JFrame {

    private static File guarda;

    /**
     * Creates new form registroAspirante
     */
    public registroAspirante() {
        initComponents();
        cargarAreas();
        cargarEdad();
        iniciarBotones();
    }

    private void cargarAreas() {
        try {
            List<DataArea> areas = logicaArea.getInstance().ListarArea();
            DefaultListModel modelo = new DefaultListModel();
            for (DataArea are : areas) {
                modelo.addElement(are);
            }
            listAreas.setModel(modelo);

        } catch (Exception e) {
            lblError.setText(e.getMessage());
        }
    }

    private void cargarEdad() {
        jcbEdad.removeAllItems();
        for (int i = 0; i < 99; i++) {
            jcbEdad.addItem(i);
        }
    }

    private void iniciarBotones() {
        btnAgregar.setVisible(true);
        btnEliminar.setVisible(false);
        btnModificar.setVisible(false);
        txtCedula.setEditable(true);
    }

    private void iniciarBotonesModiOeli() {
        btnAgregar.setVisible(false);
        btnEliminar.setVisible(true);
        btnModificar.setVisible(true);
        txtCedula.setEditable(false);
    }

    private void guardarArchivo() {
        JFileChooser fileChooser = new JFileChooser();
        int seleccion = fileChooser.showOpenDialog(fileChooser);
        if (seleccion == JFileChooser.APPROVE_OPTION) {
            guarda = fileChooser.getSelectedFile();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtCedula = new javax.swing.JTextField();
        txtNombre = new javax.swing.JTextField();
        txtApellido = new javax.swing.JTextField();
        jcbEdad = new javax.swing.JComboBox();
        btnSubeArchivo = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listAreas = new javax.swing.JList();
        lblError = new javax.swing.JLabel();
        btnAgregar = new javax.swing.JButton();
        btnBuscar = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Cedula");

        jLabel2.setText("Nombre");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel3.setText("Registro de Aspirantes");

        jLabel4.setText("Apellido");

        jLabel5.setText("Edad");

        jLabel6.setText("Area de interes");

        jLabel7.setText("Curriculum (pdf)");

        jcbEdad.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jcbEdad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbEdadActionPerformed(evt);
            }
        });

        btnSubeArchivo.setText("Subir Archivo");
        btnSubeArchivo.setToolTipText("");
        btnSubeArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubeArchivoActionPerformed(evt);
            }
        });

        listAreas.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listAreas);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnModificar.setText("Modificar");
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jcbEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCedula)
                                .addComponent(txtNombre)
                                .addComponent(txtApellido, javax.swing.GroupLayout.DEFAULT_SIZE, 199, Short.MAX_VALUE)
                                .addComponent(btnSubeArchivo))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel3))
                .addContainerGap(49, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnEliminar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 125, Short.MAX_VALUE)
                        .addComponent(btnModificar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 115, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBuscar)
                            .addComponent(btnAgregar))))
                .addGap(27, 27, 27))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCedula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnBuscar))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(txtApellido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jcbEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSubeArchivo)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAgregar)
                    .addComponent(btnModificar)
                    .addComponent(btnEliminar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblError, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        try {
            if (!txtCedula.getText().isEmpty()) {
                DataAspirante asp = null;
                asp = logicaAspirante.getInstance().buscarAspirante(txtCedula.getText());
                if (asp != null) {
                    txtApellido.setText(asp.getApellido());
                    txtNombre.setText(asp.getNombre());
                    setSelectedValues(listAreas, asp.getAreasDeInteres());
                    jcbEdad.setSelectedItem(asp.getEdad());
                    iniciarBotonesModiOeli();
                } else {
                    lblError.setText("No existe el Aspirante");
                }
            }

        } catch (Exception e) {
            lblError.setText(e.getMessage());
        }
    }//GEN-LAST:event_btnBuscarActionPerformed

    public void setSelectedValues(JList list, Object... values) {
        list.clearSelection();
        for (Object value : values) {
            int index = getIndex(list.getModel(), value);
            if (index >= 0) {
                list.addSelectionInterval(index, index);
            }
        }
        list.ensureIndexIsVisible(list.getSelectedIndex());
    }

    public int getIndex(ListModel model, Object value) {
        if (value == null) {
            return -1;
        }
        if (model instanceof DefaultListModel) {
            return ((DefaultListModel) model).indexOf(value);
        }
        for (int i = 0; i < model.getSize(); i++) {
            if (value.equals(model.getElementAt(i))) {
                return i;
            }
        }
        return -1;
    }

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        try {
            if (!txtCedula.getText().isEmpty()) {
                String cedula = txtCedula.getText();

            } else {
                throw new Exception("Debe ingresar una cedula");
            }
            DataAspirante as = new DataAspirante();
            as.setCedula(txtCedula.getText());
            as.setNombre(txtNombre.getText());
            as.setApellido(txtApellido.getText());

            if (jcbEdad.getSelectedItem() != null) {
                as.setEdad((Integer) jcbEdad.getSelectedItem());
            } else {
                throw new Exception("Debe seleccionar una edad");
            }
            
            List<DataArea> areas;
            areas = listAreas.getSelectedValuesList();
            if (areas.isEmpty()) {
                throw new Exception("Debe seleccionar al menos una area");
            }
            as.setAreasDeInteres(areas);

            if (guarda != null) {
                File file = guarda;
                FileInputStream fis = null;
                BufferedInputStream bis = null;
                DataInputStream dis = null;
                byte cont2[] = new byte[(int) file.length()];
                int bites = 0;
                try {
                    fis = new FileInputStream(file);
                    // arranco lo buffer de lectura
                    bis = new BufferedInputStream(fis);
                    dis = new DataInputStream(bis);
                    bites = dis.read(cont2);
                    // cierro todo los recursos de los buffer
                    fis.close();
                    bis.close();
                    dis.close();
                    // identifico el sistema operativo para guardar el archivo
                    // creo una ruta por is hay que crear la carpeta y otra para el archivo
                    String separador = System.getProperty("file.separator");
                    String sPath;
                    String sDir;
                    if (isWindows()) {
                        sPath = "c:" + separador + "pdf" + separador+ guarda.getName();
                        sDir = "c:" + guarda.separator + "pdf";
                    } else {
                        sPath = separador + "pdf" + separador + guarda.getName();
                        sDir = separador + "pdf";
                    }
                    //genero el puto directorio
                    java.io.File dir = new File(sDir);
                    if (!dir.exists()) {
                        dir.mkdirs();
                    }
                    // aca va a guardar el archivo. Cruce los dedos
                    FileOutputStream ou = new FileOutputStream(sPath, true); //con true no da permiso denegado: cito celebre comentario de java ! only god and know way i do this. now only good :D
                    ou.write(cont2);
                    as.setArchivoPdf(guarda.getName());
                } catch (FileNotFoundException e) {
                    throw e;
                } catch (IOException ex) {
                    throw ex;
                }
            }

            
            logicaAspirante.getInstance().altaAspirante(as);
            lblError.setText("Aspirante credo con éxito");
            limpiarVentana();
            iniciarBotones();

        } catch (Exception e) {
            lblError.setText(e.getMessage());
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void limpiarVentana() {
        txtApellido.setText("");
        txtCedula.setText("");
        txtNombre.setText("");
        guarda = null;
        jcbEdad.setSelectedItem(0);
        listAreas.clearSelection();
    }

    private boolean isWindows() {

        String so = System.getProperty("os.name").toLowerCase();
        return (so.indexOf("win") >= 0);

    }

    private void btnSubeArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubeArchivoActionPerformed
        guardarArchivo();
    }//GEN-LAST:event_btnSubeArchivoActionPerformed
private void jcbEdadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbEdadActionPerformed
// TODO add your handling code here:
}//GEN-LAST:event_jcbEdadActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        try {
            logicaAspirante.getInstance().eliminarAspirante(txtCedula.getText());
            iniciarBotones();
            limpiarVentana();
            lblError.setText("Aspirante Eliminado");
            
        } catch (Exception e) {
            lblError.setText(e.getMessage());
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        try {
            if (!txtCedula.getText().isEmpty()) {
                String cedula = txtCedula.getText();

            } else {
                throw new Exception("Debe ingresar una cedula");
            }
            DataAspirante as = new DataAspirante();
            as.setCedula(txtCedula.getText());
            as.setNombre(txtNombre.getText());
            as.setApellido(txtApellido.getText());

            if (jcbEdad.getSelectedItem() != null) {
                as.setEdad((Integer) jcbEdad.getSelectedItem());
            } else {
                throw new Exception("Debe seleccionar una edad");
            }
            
            List<DataArea> areas;
            areas = listAreas.getSelectedValuesList();
            if (areas.isEmpty()) {
                throw new Exception("Debe seleccionar al menos una area");
            }
            as.setAreasDeInteres(areas);

            if (guarda != null) {
                File file = guarda;
                FileInputStream fis = null;
                BufferedInputStream bis = null;
                DataInputStream dis = null;
                byte cont2[] = new byte[(int) file.length()];
                int bites = 0;
                try {
                    fis = new FileInputStream(file);
                    // arranco lo buffer de lectura
                    bis = new BufferedInputStream(fis);
                    dis = new DataInputStream(bis);
                    bites = dis.read(cont2);
                    // cierro todo los recursos de los buffer
                    fis.close();
                    bis.close();
                    dis.close();
                    // identifico el sistema operativo para guardar el archivo
                    // creo una ruta por is hay que crear la carpeta y otra para el archivo
                    String separador = System.getProperty("file.separator");
                    String sPath;
                    String sDir;
                    if (isWindows()) {
                        sPath = "c:" + guarda.separator + "pdf" + File.separator + guarda.getName();
                        sDir = "c:" + guarda.separator + "pdf";
                    } else {
                        sPath = guarda.separator + "pdf" + File.separator + guarda.getName();
                        sDir = guarda.separator + "pdf";
                    }
                    //genero el puto directorio
                    java.io.File dir = new File(sDir);
                    if (!dir.exists()) {
                        dir.mkdirs();
                    }
                    // aca va a guardar el archivo. Cruce los dedos
                    FileOutputStream ou = new FileOutputStream(sPath, true); //con true no da permiso denegado: cito celebre comentario de java ! only god and know way i do this. now only good :D
                    ou.write(cont2);
                    as.setArchivoPdf(guarda.getName());
                } catch (FileNotFoundException e) {
                    throw e;
                } catch (IOException ex) {
                    throw ex;
                }
            }
            logicaAspirante.getInstance().modAspirante(as);
            lblError.setText("Aspirante modificado con éxito");
            limpiarVentana();
            iniciarBotones();
        } catch (Exception ex){
            lblError.setText(ex.getMessage());
        }
    }//GEN-LAST:event_btnModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(registroAspirante.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(registroAspirante.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(registroAspirante.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(registroAspirante.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new registroAspirante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModificar;
    private javax.swing.JButton btnSubeArchivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox jcbEdad;
    private javax.swing.JLabel lblError;
    private javax.swing.JList listAreas;
    private javax.swing.JTextField txtApellido;
    private javax.swing.JTextField txtCedula;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
